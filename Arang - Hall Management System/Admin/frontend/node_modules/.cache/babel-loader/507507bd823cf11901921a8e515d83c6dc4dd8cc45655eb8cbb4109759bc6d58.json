{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VAISHNAVI.M\\\\Downloads\\\\phegon-hotel-booking-and-management-react-mysql\\\\phegon-hotel-booking-and-management-react-mysql\\\\frontend\\\\src\\\\component\\\\auth\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useNavigate,useLocation } from \"react-router-dom\";\n// import ApiService from \"../../service/ApiService\";\n\n// function LoginPage() {\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [error, setError] = useState('');\n//     const navigate = useNavigate();\n//     const location = useLocation();\n\n//   const from = location.state?.from?.pathname || '/home';\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n\n//         if (!email || !password) {\n//             setError('Please fill in all fields.');\n//             setTimeout(() => setError(''), 5000);\n//             return;\n//         }\n\n//         try {\n//             const response = await ApiService.loginUser({email, password});\n//             if (response.statusCode === 200) {\n//                 localStorage.setItem('token', response.token);\n//                 localStorage.setItem('role', response.role);\n//                 navigate(from, { replace: true });\n//             }\n//         } catch (error) {\n//             setError(error.response?.data?.message || error.message);\n//             setTimeout(() => setError(''), 5000);\n//         }\n//     };\n\n//     return (\n//         <div className=\"auth-container\">\n//             <h2>Login</h2>\n//             {error && <p className=\"error-message\">{error}</p>}\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"form-group\">\n//                     <label>Email: </label>\n//                     <input\n//                         type=\"email\"\n//                         value={email}\n//                         onChange={(e) => setEmail(e.target.value)}\n//                         required\n//                     />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label>Password: </label>\n//                     <input\n//                         type=\"password\"\n//                         value={password}\n//                         onChange={(e) => setPassword(e.target.value)}\n//                         required\n//                     />\n//                 </div>\n//                 <button type=\"submit\">Login</button>\n//             </form>\n\n//             <p className=\"register-link\">\n//                 Don't have an account? <a href=\"/register\">Register</a>\n//             </p>\n//         </div>\n//     );\n// }\n\n// export default LoginPage;\n\nimport React, { useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport ApiService from \"../../service/ApiService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  var _location$state, _location$state$from;\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$from = _location$state.from) === null || _location$state$from === void 0 ? void 0 : _location$state$from.pathname) || '/home';\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!email || !password) {\n      setError('Please fill in all fields.');\n      setTimeout(() => setError(''), 5000);\n      return;\n    }\n\n    // Check if the admin credentials are entered\n    if (email === \"admin123@gmail.com\" && password === \"admin\") {\n      navigate('/adminpage', {\n        replace: true\n      }); // Ensure this path matches your admin route\n      return;\n    }\n    try {\n      const response = await ApiService.loginUser({\n        email,\n        password\n      });\n      if (response.statusCode === 200) {\n        localStorage.setItem('token', response.token);\n        localStorage.setItem('role', response.role);\n        navigate(from, {\n          replace: true\n        });\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message);\n      setTimeout(() => setError(''), 5000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"register-link\",\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/register\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginPage, \"HLFa9giwmnBuaVkJH4kzW6+KQqQ=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","ApiService","jsxDEV","_jsxDEV","LoginPage","_s","_location$state","_location$state$from","email","setEmail","password","setPassword","error","setError","navigate","location","from","state","pathname","handleSubmit","e","preventDefault","setTimeout","replace","response","loginUser","statusCode","localStorage","setItem","token","role","_error$response","_error$response$data","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","href","_c","$RefreshReg$"],"sources":["C:/Users/VAISHNAVI.M/Downloads/phegon-hotel-booking-and-management-react-mysql/phegon-hotel-booking-and-management-react-mysql/frontend/src/component/auth/LoginPage.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { useNavigate,useLocation } from \"react-router-dom\";\n// import ApiService from \"../../service/ApiService\";\n\n// function LoginPage() {\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [error, setError] = useState('');\n//     const navigate = useNavigate();\n//     const location = useLocation();\n\n//   const from = location.state?.from?.pathname || '/home';\n\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n\n//         if (!email || !password) {\n//             setError('Please fill in all fields.');\n//             setTimeout(() => setError(''), 5000);\n//             return;\n//         }\n\n//         try {\n//             const response = await ApiService.loginUser({email, password});\n//             if (response.statusCode === 200) {\n//                 localStorage.setItem('token', response.token);\n//                 localStorage.setItem('role', response.role);\n//                 navigate(from, { replace: true });\n//             }\n//         } catch (error) {\n//             setError(error.response?.data?.message || error.message);\n//             setTimeout(() => setError(''), 5000);\n//         }\n//     };\n\n//     return (\n//         <div className=\"auth-container\">\n//             <h2>Login</h2>\n//             {error && <p className=\"error-message\">{error}</p>}\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"form-group\">\n//                     <label>Email: </label>\n//                     <input\n//                         type=\"email\"\n//                         value={email}\n//                         onChange={(e) => setEmail(e.target.value)}\n//                         required\n//                     />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label>Password: </label>\n//                     <input\n//                         type=\"password\"\n//                         value={password}\n//                         onChange={(e) => setPassword(e.target.value)}\n//                         required\n//                     />\n//                 </div>\n//                 <button type=\"submit\">Login</button>\n//             </form>\n\n//             <p className=\"register-link\">\n//                 Don't have an account? <a href=\"/register\">Register</a>\n//             </p>\n//         </div>\n//     );\n// }\n\n// export default LoginPage;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React, { useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport ApiService from \"../../service/ApiService\";\n\nfunction LoginPage() {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    const from = location.state?.from?.pathname || '/home';\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (!email || !password) {\n            setError('Please fill in all fields.');\n            setTimeout(() => setError(''), 5000);\n            return;\n        }\n\n        // Check if the admin credentials are entered\n        if (email === \"admin123@gmail.com\" && password === \"admin\") {\n            navigate('/adminpage', { replace: true }); // Ensure this path matches your admin route\n            return;\n        }\n\n        try {\n            const response = await ApiService.loginUser({ email, password });\n            if (response.statusCode === 200) {\n                localStorage.setItem('token', response.token);\n                localStorage.setItem('role', response.role);\n                navigate(from, { replace: true });\n            }\n        } catch (error) {\n            setError(error.response?.data?.message || error.message);\n            setTimeout(() => setError(''), 5000);\n        }\n    };\n\n    return (\n        <div className=\"auth-container\">\n            <h2>Login</h2>\n            {error && <p className=\"error-message\">{error}</p>}\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label>Email: </label>\n                    <input\n                        type=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label>Password: </label>\n                    <input\n                        type=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        required\n                    />\n                </div>\n                <button type=\"submit\">Login</button>\n            </form>\n\n            <p className=\"register-link\">\n                Don't have an account? <a href=\"/register\">Register</a>\n            </p>\n        </div>\n    );\n}\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}